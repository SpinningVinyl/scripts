#!/usr/bin/env bash

# ios-mount -- easily transfer documents between your Linux PC and an iPhone/iPad.

# This script uses `ifuse` and `libimobiledevice` to mount the selected app bundle to 
# the folder specified in $MOUNT_POINT, then opens a file manager window pointing to
# that folder. Finally, when the user closes the file manager window, the script
# unmounts the file system.
#
# The script also uses `fzf` as the main part of its UI, such as it is.

MOUNT_POINT="$HOME/.ios/afc"

get_id() {
    local id="$(ifuse --list-apps | grep -F "$1" | cut -d ',' -f1)"
    echo "$id"
}

if ! command -v fzf > /dev/null; then
    echo "ERROR: 'fzf' not found."
    exit 42
elif ! command -v ifuse > /dev/null; then
    echo "ERROR: 'ifuse' not found."
    exit 42
elif ! command -v idevicepair > /dev/null; then
    echo "ERROR: 'libimobiledevice' not found."
    exit 42
fi

idevicepair validate > /dev/null
status=$?

if ! test $status -eq 0; then
    echo "ERROR: use 'idevicepair pair' to establish a connection between your iDevice and this computer."
    exit 43
fi

echo "* Please select an application bundle to mount."
echo "** Mount point: ${MOUNT_POINT}"
selection="$(ifuse --list-apps | cut -d ',' -f3 | sed 's/"//g' | fzf --height=10% --layout=reverse)"

if [ -z $selection ]; then
    echo "User cancellation, exiting."
    exit 0
fi

bundle_id="$(get_id $selection)"
ifuse --documents "$bundle_id" "$MOUNT_POINT"

# replace Dolphin with your favourite file manager
dolphin "${MOUNT_POINT}/" 1> /dev/null 2> /dev/null &
process_id=$!
wait $process_id
# sleep for 3s to make sure that the filesystem is unmountable
sleep 3
fusermount -u "$MOUNT_POINT"
